class Solution {
    
    static TreeNode invertTree(TreeNode root){
        if(root == null){
            return root;
        }

        TreeNode left = invertTree(root.left);
        TreeNode right = invertTree(root.right);

        root.right = left;
        root.left = right;

        return root;
    }
    
    static boolean isIdentical(TreeNode root, TreeNode subRoot){
        if(root == null && subRoot == null){
            return true;
        }
        if(root == null || subRoot == null){
            return false;
        }
        if(root.val == subRoot.val){
            return isIdentical(root.left, subRoot.left) && isIdentical(root.right, subRoot.right);
        }
        return false;
    }
    
    public boolean isSymmetric(TreeNode root) {
        
        TreeNode leftRoot = root.left;
        TreeNode rightRoot = root.right;
        
        return isIdentical(leftRoot, invertTree(rightRoot));
        
    }
}
